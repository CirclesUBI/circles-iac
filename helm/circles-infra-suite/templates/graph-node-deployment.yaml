apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o circles-infra-suite --volumes hostPath -c
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: graph-node
  name: graph-node
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: graph-node
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o circles-infra-suite --volumes hostPath -c
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: graph-node
    spec:  
      containers:
        - env:
            - name: GRAPH_LOG 
              valueFrom:
                configMapKeyRef:
                  key: GRAPH_LOG
                  name: env
            - name: ethereum
              valueFrom:
                configMapKeyRef:
                  key: ETHEREUM_NODE_ENDPOINT
                  name: env
            - name: ipfs
              valueFrom:
                configMapKeyRef:
                  key: IPFS
                  name: env
            - name: postgres_host
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_HOST
                  name: db
            - name: postgres_pass
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: db
            - name: postgres_user
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: db
            - name: POSTGRES_USE_SSL
              value: "1"
            - name: postgres_db
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DATABASE_GRAPH
                  name: env

          image: graphprotocol/graph-node:v0.25.1
          name: circles-graph-node
          ports:
            - containerPort: 8000
            - containerPort: 8001
            - containerPort: 8020
            - containerPort: 8030
            - containerPort: 8040
          resources: {}
      restartPolicy: Always
status: {}
