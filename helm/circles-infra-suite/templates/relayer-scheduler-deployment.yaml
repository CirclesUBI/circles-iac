apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: {{.Values.relayerService.name}}-scheduler
  name: {{.Values.relayerService.name}}-scheduler
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      io.kompose.service: {{.Values.relayerService.name}}-scheduler
  template:
    metadata:
      labels:
        io.kompose.service: {{.Values.relayerService.name}}-scheduler
    spec:
      imagePullSecrets:
        - name: circles-registry 
      restartPolicy: Always
      volumes:
        - hostPath:
            path: /data
          name: relayer
        - hostPath:
            path: /data
          name: relayer-html
      containers:
        - name: circles-{{.Values.relayerService.name}}-scheduler
          image: {{.Values.imageRegistry}}/{{.Values.relayerService.image}}:{{.Values.relayerService.imageTag}}
          ports:
            - containerPort: {{.Values.relayerService.port}}
          volumeMounts:
            - mountPath: /nginx
              name: relayer
            - mountPath: /usr/share/nginx/html/relayer
              name: relayer-html
          workingDir: /safe-relay-service
          args:
            - ./run-scheduler.sh
          env:
            # Relayer Configuration
            # ~~~~~~~~~~~~~~~~~~~~~
            - name: SAFE_FUNDER_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  key: SAFE_FUNDER_PRIVATE_KEY
                  name: relayer
            - name: SAFE_TX_SENDER_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  key: SAFE_TX_SENDER_PRIVATE_KEY
                  name: relayer
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: DJANGO_SECRET_KEY
                  name: relayer
            # ~~~~~~~~~~~~~~~~~~~~~
            - name: C_FORCE_ROOT
              value: "true"
            - name: DEPLOY_MASTER_COPY_ON_INIT
              value: "0"
            - name: DEPLOY_PROXY_FACTORY_ON_INIT
              value: "0"
            - name: CELERY_BROKER_URL
              valueFrom:
                configMapKeyRef:
                  key: CELERY_BROKER_URL
                  name: env
            - name: CORS_ALLOWED_ORIGINS
              valueFrom:
                configMapKeyRef:
                  key: CORS_ALLOWED_ORIGINS
                  name: env
            - name: DJANGO_ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_ALLOWED_HOSTS
                  name: env
            - name: DJANGO_SETTINGS_MODULE
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_SETTINGS_MODULE
                  name: env
            - name: RELAYER_REDIS_URL
              valueFrom:
                configMapKeyRef:
                  key: RELAYER_REDIS_URL
                  name: env

            # "The Graph" Configuration
            # ~~~~~~~~~~~~~~~~~~~~~~~~~
            - name: GRAPH_NODE_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: GRAPH_NODE_ENDPOINT
                  name: env
            - name: SUBGRAPH_NAME
              valueFrom:
                configMapKeyRef:
                  key: SUBGRAPH_NAME
                  name: env

            # Ethereum Node Configuration
            # ~~~~~~~~~~~~~~~~~~~~~~~~~~~
            - name: ETHEREUM_NODE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: ETHEREUM_NODE_ENDPOINT
                  name: ethereumnode

            # Smart Contract Addresses
            # ~~~~~~~~~~~~~~~~~~~~~~~~
            - name: HUB_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: HUB_ADDRESS
                  name: env
            - name: PROXY_FACTORY_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: PROXY_FACTORY_ADDRESS
                  name: env
            - name: SAFE_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: SAFE_ADDRESS
                  name: env
            - name: SAFE_CONTRACT_ADDRESS_CRC
              valueFrom:
                configMapKeyRef:
                  key: SAFE_CONTRACT_ADDRESS_CRC
                  name: env
            - name: SAFE_CONTRACT_ADDRESS_130
              valueFrom:
                configMapKeyRef:
                  key: SAFE_CONTRACT_ADDRESS_130
                  name: env
            - name: PROXY_FACTORY_ADDRESS_CRC
              valueFrom:
                configMapKeyRef:
                  key: PROXY_FACTORY_ADDRESS_CRC
                  name: env
            - name: SAFE_DEFAULT_CALLBACK_HANDLER
              valueFrom:
                configMapKeyRef:
                  key: SAFE_DEFAULT_CALLBACK_HANDLER
                  name: env 

            # PostgreSQL Databases
            # ~~~~~~~~~~~~~~~~~~~~
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_HOST
                  name: db
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: db
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PORT
                  name: db
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: db
            # ~~~~~~~~~~~~~~~~~~~~
            - name: POSTGRES_DATABASE_RELAYER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DATABASE_RELAYER
                  name: env
